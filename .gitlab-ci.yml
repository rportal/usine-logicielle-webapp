stages:
- test
- build
- deploy

variables:
  VERSION: "0.1"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

run_tests:
  stage: test
  tags:
    - docker
  before_script:
    - cd app
    - npm install
  script:
    - npm run test
  artifacts:
    when: always
    reports:
      junit: app/junit.xml

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml

run_build:
  image: docker:latest
  tags:
    - docker
  services:
    - docker:dind
  stage: build
  script:
    - docker build -t registry.gitlab.com/formation-dj/docker/usine-logicielle-webapp:$VERSION .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker push registry.gitlab.com/formation-dj/docker/usine-logicielle-webapp:$VERSION

run_deploy:
  stage: deploy
  tags:
    - kubernetes
  before_script:
    - apk add curl 
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  script:
    - kubectl get secret gitlab-registry --namespace=production && SECRET_EXISTS=1 || SECRET_EXISTS=0
    - |
      if [ "$SECRET_EXISTS" -eq 1 ]; then
        echo "Secret exists. Deleting..."
        kubectl delete secret gitlab-registry --namespace=production
      fi
    - >
      kubectl create secret docker-registry gitlab-registry
      --docker-server=registry.gitlab.com
      --docker-username=$CI_REGISTRY_USER
      --docker-password=$CI_REGISTRY_PASSWORD
      --docker-email=$YOUR_EMAIL
      --namespace=production
    - kubectl apply --namespace production -f deployment.yml

